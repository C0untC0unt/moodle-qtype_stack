/* This file contains a library of code to help assess students' free-hand graph sketches. */
/* Based on work by Alexander Meyer and Tobias Mai, 2020.                                  */

/* For examples see: \doc\content\2018-proceedings\mai_tobias_2019_2582427.pdf             */

/* A student's graph comes to Maxima as a "list of points".
   This code deals with "lists of points".  

   To keep our input/output code as short as possible we use the function "pt" to represent a point.   
 
   So, a student's graph might be something like
   ans1:[pt(0,0), pt(0.5,0.25), pt(1,2), pt(2,4)];
*/

/*
To Do-list for future features

- saussage-idea
- find bounding box values
- define if it will be a single testing-functions or several
- documentation of functions with exapmles (what could happen in the classroom?)

Useful Questions:

You need the points!
And you need a true/false!
x_intercepts_skeched(....) -> [points]
x_intercepts_skeched_p(ex) := emptyp(x_intercepts_skeched(ex));
Always return the same data type!


____________________________________________

Alex, is youcode going to beon one answer test or used in PRTs?
Sausage idea

(1) Maxima functions to check
Check?
Is f1 inside the epilson saussage of f2?
(2) Using JSXGraph to plot an epsilong saussage aropunf f2.  Docs/examples!
(3) Feedback, with student's function, real function and saussage!
*/




pttex(ex) := sconcat("\\left(", simplode(maplist(lambda([ex1], stack_disp_strip_dollars(tex(ex1, false))), args(ex)), ", "), "\\right)");
texput(pt, pttex);


/*Question Variables*/

f(x):= -x^2+2*x+3;
LeftLimitOfInterval: -1;
RightLimitOfInterval: 3;

/* Examples for inputs (two-input-approach)*/
/* In these (ansx1 and ansy1), etc, belong together as: (xvalues and yvalues)*/

ansx1: [-0.967391304347826, -0.967391304347826, -0.8586956521739131, -0.8152173913043478, -0.8152173913043478, -0.7934782608695652, -0.7934782608695652, -0.7934782608695652, -0.7717391304347826, -0.7282608695652174, -0.6413043478260869, -0.6195652173913043, -0.5978260869565217, -0.5978260869565217, -0.5978260869565217, -0.5760869565217391, -0.5760869565217391, -0.5760869565217391, -0.5760869565217391, -0.5760869565217391, -0.5543478260869565, -0.5543478260869565, -0.532608695652174, -0.5108695652173914, -0.5108695652173914, -0.5108695652173914, -0.5108695652173914, -0.4673913043478261, -0.4673913043478261, -0.4673913043478261, -0.44565217391304346, -0.42391304347826086, -0.40217391304347827, -0.3804347826086957, -0.358695652173913, -0.33695652173913043, -0.31521739130434784, -0.29347826086956524, -0.2717391304347826, -0.22826086956521738, -0.20652173913043478, -0.18478260869565216, -0.16304347826086957, -0.16304347826086957, -0.14130434782608695, -0.14130434782608695, -0.09782608695652174, -0.09782608695652174, -0.05434782608695652, -0.05434782608695652, -0.010869565217391304, -0.010869565217391304, 0.010869565217391304, 0.010869565217391304, 0.010869565217391304, 0.03260869565217391, 0.05434782608695652, 0.07608695652173914, 0.07608695652173914, 0.11956521739130435, 0.14130434782608695, 0.18478260869565216, 0.20652173913043478, 0.20652173913043478, 0.2717391304347826, 0.358695652173913, 0.40217391304347827, 0.42391304347826086, 0.44565217391304346, 0.5543478260869565, 0.6630434782608695, 0.7717391304347826, 0.8152173913043478, 0.8586956521739131, 0.9021739130434783, 0.9891304347826086, 1.141304347826087, 1.1630434782608696, 1.1630434782608696, 1.2282608695652173, 1.2717391304347827, 1.2934782608695652, 1.315217391304348, 1.3369565217391304, 1.3369565217391304, 1.358695652173913, 1.3804347826086956, 1.4021739130434783, 1.423913043478261, 1.4456521739130435, 1.4456521739130435, 1.4891304347826086, 1.5108695652173914, 1.5108695652173914, 1.5326086956521738, 1.576086956521739, 1.576086956521739, 1.5978260869565217, 1.641304347826087, 1.6630434782608696, 1.684782608695652, 1.7065217391304348, 1.7282608695652173, 1.7717391304347827, 1.7717391304347827, 1.7934782608695652, 1.8369565217391304, 1.858695652173913, 1.8804347826086956, 1.9021739130434783, 1.9456521739130435, 1.9891304347826086, 1.9891304347826086, 2.032608695652174, 2.0543478260869565, 2.097826086956522, 2.141304347826087, 2.1630434782608696, 2.2065217391304346, 2.25, 2.2934782608695654, 2.3369565217391304, 2.358695652173913, 2.402173913043478, 2.4239130434782608, 2.467391304347826, 2.489130434782609, 2.532608695652174, 2.597826086956522, 2.619565217391304, 2.641304347826087, 2.6847826086956523, 2.7065217391304346, 2.7282608695652173, 2.75, 2.7717391304347827, 2.7717391304347827, 2.8152173913043477, 2.8152173913043477, 2.8369565217391304, 2.8369565217391304, 2.8369565217391304, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.880434782608696];
ansy1: [0.045652306598165764, 0.06739143703294836, 0.32826100225033966, 0.43695665442425274, 0.45869578485903534, 0.48043491529381793, 0.5021740457286006, 0.5239131761633832, 0.6543479587720789, 0.7630436109459918, 0.980434915293818, 1.0456523065981658, 1.089130567467731, 1.1326088283372961, 1.197826219641644, 1.2413044805112092, 1.263043610945992, 1.3282610022503396, 1.3500001326851223, 1.3934783935546875, 1.4804349152938179, 1.5456523065981658, 1.6543479587720789, 1.7413044805112092, 1.8065218718155571, 1.9152175239894702, 1.9369566544242527, 2.0239131761633833, 2.0673914370329483, 2.089130567467731, 2.1326088283372964, 2.1760870892068613, 2.2630436109459917, 2.2847827413807744, 2.32826100225034, 2.371739263119905, 2.3934783935546875, 2.436956654424253, 2.458695784859035, 2.5673914370329483, 2.6108696979025137, 2.6326088283372964, 2.6760870892068613, 2.697826219641644, 2.697826219641644, 2.7195653500764267, 2.7630436109459917, 2.7847827413807744, 2.8934783935546875, 2.936956654424253, 3.0239131761633833, 3.0673914370329483, 3.1108696979025137, 3.1326088283372964, 3.1543479587720786, 3.1760870892068613, 3.197826219641644, 3.2413044805112095, 3.2630436109459917, 3.306521871815557, 3.350000132685122, 3.3934783935546875, 3.41521752398947, 3.436956654424253, 3.480434915293818, 3.5456523065981655, 3.589130567467731, 3.6326088283372964, 3.6543479587720786, 3.7195653500764267, 3.7847827413807744, 3.850000132685122, 3.8934783935546875, 3.8934783935546875, 3.91521752398947, 3.936956654424253, 3.980434915293818, 3.980434915293818, 4.002174045728601, 4.002174045728601, 4.002174045728601, 3.980434915293818, 3.958695784859035, 3.936956654424253, 3.91521752398947, 3.8934783935546875, 3.871739263119905, 3.850000132685122, 3.82826100225034, 3.82826100225034, 3.7847827413807744, 3.7413044805112095, 3.697826219641644, 3.6760870892068613, 3.6326088283372964, 3.589130567467731, 3.5673914370329483, 3.5456523065981655, 3.5021740457286006, 3.458695784859035, 3.436956654424253, 3.3934783935546875, 3.371739263119905, 3.32826100225034, 3.306521871815557, 3.2847827413807744, 3.2630436109459917, 3.2195653500764267, 3.197826219641644, 3.1543479587720786, 3.1326088283372964, 3.089130567467731, 3.0673914370329483, 3.0239131761633833, 2.980434915293818, 2.8934783935546875, 2.850000132685122, 2.806521871815557, 2.7630436109459917, 2.697826219641644, 2.6108696979025137, 2.5673914370329483, 2.5239131761633833, 2.458695784859035, 2.41521752398947, 2.371739263119905, 2.306521871815557, 2.2630436109459917, 2.197826219641644, 2.1543479587720786, 2.089130567467731, 2.0239131761633833, 1.9804349152938179, 1.9369566544242527, 1.8934783935546875, 1.8500001326851223, 1.8065218718155571, 1.697826219641644, 1.6108696979025137, 1.5456523065981658, 1.4804349152938179, 1.4152175239894702, 1.3282610022503396, 1.2195653500764265, 1.1760870892068613, 1.1108696979025137, 1.023913176163383, 0.980434915293818, 0.8934783935546875, 0.8500001326851223, 0.7630436109459918, 0.6760870892068614, 0.589130567467731, 0.5239131761633832, 0.48043491529381793, 0.4152175239894701, 0.3934783935546875, 0.3717392631199049, 0.35000013268512226, 0.2847827413807745, 0.1543479587720788, 0.1326088283372962];

ansx2: [-0.9239130434782609, -0.9239130434782609, -0.8804347826086957, -0.7934782608695652, -0.75, -0.7282608695652174, -0.7282608695652174, -0.7282608695652174, -0.7282608695652174, -0.6847826086956522, -0.6847826086956522, -0.6413043478260869, -0.6195652173913043, -0.5978260869565217, -0.5543478260869565, -0.532608695652174, -0.5108695652173914, -0.4891304347826087, -0.4673913043478261, -0.42391304347826086, -0.3804347826086957, -0.33695652173913043, -0.29347826086956524, -0.2717391304347826, -0.22826086956521738, -0.16304347826086957, -0.11956521739130435, -0.09782608695652174, -0.05434782608695652, -0.010869565217391304, 0.03260869565217391, 0.07608695652173914, 0.11956521739130435, 0.16304347826086957, 0.22826086956521738, 0.25, 0.31521739130434784, 0.33695652173913043, 0.3804347826086957, 0.40217391304347827, 0.42391304347826086, 0.4891304347826087, 0.532608695652174, 0.5760869565217391, 0.5978260869565217, 0.5978260869565217, 0.6413043478260869, 0.6630434782608695, 0.7065217391304348, 0.7065217391304348, 0.75, 0.7717391304347826, 0.7934782608695652, 0.8369565217391305, 0.8804347826086957, 0.9021739130434783, 0.9239130434782609, 0.9239130434782609, 0.9456521739130435, 0.967391304347826, 1.0326086956521738, 1.1195652173913044, 1.315217391304348, 1.4456521739130435, 1.4891304347826086, 1.5108695652173914, 1.5108695652173914, 1.5543478260869565, 1.641304347826087, 1.684782608695652, 1.7717391304347827, 1.815217391304348, 1.858695652173913, 1.8804347826086956, 1.923913043478261, 1.9891304347826086, 2.032608695652174, 2.0543478260869565, 2.097826086956522, 2.141304347826087, 2.1847826086956523, 2.2282608695652173, 2.2717391304347827, 2.3152173913043477, 2.380434782608696, 2.4239130434782608, 2.489130434782609, 2.489130434782609, 2.532608695652174, 2.532608695652174, 2.532608695652174, 2.5543478260869565, 2.5543478260869565, 2.5543478260869565, 2.5760869565217392, 2.5760869565217392, 2.597826086956522, 2.619565217391304, 2.641304347826087, 2.6630434782608696, 2.6630434782608696, 2.6630434782608696, 2.6630434782608696, 2.6630434782608696, 2.6847826086956523, 2.7065217391304346, 2.7065217391304346, 2.7282608695652173, 2.7717391304347827, 2.7934782608695654, 2.8152173913043477, 2.8152173913043477, 2.858695652173913, 2.880434782608696, 2.9239130434782608, 2.9456521739130435];
ansy2: [3.91521752398947, 3.8934783935546875, 3.7630436109459917, 3.589130567467731, 3.5456523065981655, 3.5456523065981655, 3.5021740457286006, 3.480434915293818, 3.458695784859035, 3.41521752398947, 3.350000132685122, 3.2847827413807744, 3.2413044805112095, 3.2195653500764267, 3.1543479587720786, 3.1108696979025137, 3.0456523065981655, 3.0239131761633833, 2.980434915293818, 2.8934783935546875, 2.806521871815557, 2.7195653500764267, 2.6108696979025137, 2.5456523065981655, 2.436956654424253, 2.32826100225034, 2.2195653500764267, 2.1543479587720786, 2.0239131761633833, 1.9586957848590354, 1.8282610022503396, 1.763043610945992, 1.6326088283372961, 1.5456523065981658, 1.3934783935546875, 1.3500001326851223, 1.197826219641644, 1.1326088283372961, 1.0673914370329485, 1.023913176163383, 0.980434915293818, 0.8500001326851223, 0.7847827413807744, 0.7195653500764266, 0.6760870892068614, 0.6543479587720789, 0.6108696979025136, 0.589130567467731, 0.5239131761633832, 0.45869578485903534, 0.43695665442425274, 0.3934783935546875, 0.35000013268512226, 0.30652187181555707, 0.2630436109459918, 0.21956535007642664, 0.21956535007642664, 0.197826219641644, 0.197826219641644, 0.197826219641644, 0.197826219641644, 0.17608708920686142, 0.197826219641644, 0.21956535007642664, 0.21956535007642664, 0.21956535007642664, 0.24130448051120923, 0.30652187181555707, 0.4152175239894701, 0.48043491529381793, 0.5673914370329484, 0.6543479587720789, 0.7413044805112092, 0.8282610022503397, 0.9152175239894701, 1.0021740457286006, 1.0673914370329485, 1.1326088283372961, 1.2195653500764265, 1.263043610945992, 1.3282610022503396, 1.3934783935546875, 1.4804349152938179, 1.5673914370329485, 1.6760870892068613, 1.7413044805112092, 1.8717392631199048, 1.9369566544242527, 2.0021740457286006, 2.0456523065981655, 2.089130567467731, 2.1326088283372964, 2.1760870892068613, 2.2195653500764267, 2.2847827413807744, 2.350000132685122, 2.41521752398947, 2.480434915293818, 2.589130567467731, 2.6543479587720786, 2.7413044805112095, 2.806521871815557, 2.8934783935546875, 3.0021740457286006, 3.089130567467731, 3.1326088283372964, 3.197826219641644, 3.2630436109459917, 3.350000132685122, 3.480434915293818, 3.5673914370329483, 3.6543479587720786, 3.7413044805112095, 3.82826100225034, 3.936956654424253, 3.980434915293818];

ansx3: [-0.9891304347826086, -0.9891304347826086, -1.0108695652173914, -1.0108695652173914, -1.0108695652173914, -1.0108695652173914, -1.0108695652173914, -1.0108695652173914, -1.0108695652173914, -1.0108695652173914, -1.0108695652173914, -0.9891304347826086, -0.9891304347826086, -0.9891304347826086, -0.967391304347826, -0.9239130434782609, -0.9239130434782609, -0.9239130434782609, -0.9239130434782609, -0.9239130434782609, -0.9239130434782609, -0.9239130434782609, -0.9239130434782609, -0.9239130434782609, -0.9239130434782609, -0.8804347826086957, -0.8804347826086957, -0.8369565217391305, -0.8152173913043478, -0.7934782608695652, -0.7717391304347826, -0.75, -0.7282608695652174, -0.7282608695652174, -0.7065217391304348, -0.6847826086956522, -0.6847826086956522, -0.6630434782608695, -0.6630434782608695, -0.6630434782608695, -0.6413043478260869, -0.6413043478260869, -0.6413043478260869, -0.6413043478260869, -0.6413043478260869, -0.6413043478260869, -0.6195652173913043, -0.5978260869565217, -0.5760869565217391, -0.5543478260869565, -0.5543478260869565, -0.5543478260869565, -0.532608695652174, -0.5108695652173914, -0.4891304347826087, -0.4891304347826087, -0.4673913043478261, -0.40217391304347827, -0.3804347826086957, -0.33695652173913043, -0.29347826086956524, -0.2717391304347826, -0.25, -0.22826086956521738, -0.18478260869565216, -0.16304347826086957, -0.11956521739130435, -0.09782608695652174, -0.07608695652173914, -0.03260869565217391, 0.010869565217391304, 0.03260869565217391, 0.07608695652173914, 0.09782608695652174, 0.11956521739130435, 0.14130434782608695, 0.16304347826086957, 0.20652173913043478, 0.22826086956521738, 0.2717391304347826, 0.29347826086956524, 0.33695652173913043, 0.3804347826086957, 0.40217391304347827, 0.44565217391304346, 0.4673913043478261, 0.4891304347826087, 0.5108695652173914, 0.5543478260869565, 0.5760869565217391, 0.5760869565217391, 0.5978260869565217, 0.6195652173913043, 0.6413043478260869, 0.6847826086956522, 0.75, 0.8369565217391305, 1.0108695652173914, 1.076086956521739, 1.25, 1.315217391304348, 1.358695652173913, 1.358695652173913, 1.4456521739130435, 1.4891304347826086, 1.5326086956521738, 1.5543478260869565, 1.6195652173913044, 1.684782608695652, 1.684782608695652, 1.7065217391304348, 1.7282608695652173, 1.75, 1.7934782608695652, 1.8369565217391304, 1.858695652173913, 1.8804347826086956, 1.9021739130434783, 1.9456521739130435, 1.9891304347826086, 2.010869565217391, 2.032608695652174, 2.0760869565217392, 2.0760869565217392, 2.0760869565217392, 2.097826086956522, 2.097826086956522, 2.141304347826087, 2.1630434782608696, 2.2065217391304346, 2.2282608695652173, 2.25, 2.25, 2.2934782608695654, 2.3369565217391304, 2.358695652173913, 2.358695652173913, 2.402173913043478, 2.4239130434782608, 2.4239130434782608, 2.4239130434782608, 2.467391304347826, 2.489130434782609, 2.510869565217391, 2.510869565217391, 2.510869565217391, 2.532608695652174, 2.532608695652174, 2.532608695652174, 2.532608695652174, 2.5543478260869565, 2.5543478260869565, 2.5760869565217392, 2.5760869565217392, 2.597826086956522, 2.597826086956522, 2.597826086956522, 2.619565217391304, 2.619565217391304, 2.619565217391304, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.6630434782608696, 2.6847826086956523, 2.6847826086956523, 2.6847826086956523, 2.6847826086956523, 2.7065217391304346, 2.7065217391304346, 2.75, 2.75, 2.75, 2.7717391304347827, 2.7934782608695654, 2.7934782608695654, 2.7934782608695654, 2.8152173913043477, 2.8152173913043477, 2.8369565217391304, 2.8369565217391304, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.880434782608696, 2.880434782608696, 2.902173913043478, 2.902173913043478, 2.902173913043478, 2.902173913043478, 2.9239130434782608, 2.9239130434782608];
ansy3: [0.0021740457286005435, 0.045652306598165764, 0.17608708920686142, 0.2847827413807745, 0.32826100225033966, 0.3717392631199049, 0.3934783935546875, 0.4152175239894701, 0.43695665442425274, 0.48043491529381793, 0.6543479587720789, 0.697826219641644, 0.7195653500764266, 0.7413044805112092, 0.8934783935546875, 1.089130567467731, 1.1543479587720789, 1.197826219641644, 1.2195653500764265, 1.263043610945992, 1.2847827413807744, 1.3500001326851223, 1.3717392631199048, 1.4152175239894702, 1.4586957848590354, 1.5021740457286006, 1.5456523065981658, 1.6108696979025137, 1.6760870892068613, 1.7195653500764265, 1.8065218718155571, 1.8717392631199048, 1.9152175239894702, 1.9369566544242527, 2.0021740457286006, 2.0456523065981655, 2.1108696979025137, 2.1543479587720786, 2.1760870892068613, 2.2195653500764267, 2.350000132685122, 2.3934783935546875, 2.458695784859035, 2.5021740457286006, 2.5239131761633833, 2.5673914370329483, 2.589130567467731, 2.6543479587720786, 2.7195653500764267, 2.7630436109459917, 2.806521871815557, 2.871739263119905, 2.871739263119905, 2.91521752398947, 2.936956654424253, 2.958695784859035, 2.980434915293818, 3.0673914370329483, 3.089130567467731, 3.1326088283372964, 3.1760870892068613, 3.197826219641644, 3.2195653500764267, 3.2630436109459917, 3.2847827413807744, 3.306521871815557, 3.32826100225034, 3.350000132685122, 3.371739263119905, 3.41521752398947, 3.436956654424253, 3.458695784859035, 3.480434915293818, 3.5021740457286006, 3.5456523065981655, 3.5673914370329483, 3.5673914370329483, 3.589130567467731, 3.6326088283372964, 3.6543479587720786, 3.6760870892068613, 3.697826219641644, 3.7413044805112095, 3.7847827413807744, 3.806521871815557, 3.806521871815557, 3.82826100225034, 3.850000132685122, 3.8934783935546875, 3.8934783935546875, 3.91521752398947, 3.936956654424253, 3.936956654424253, 3.936956654424253, 3.958695784859035, 3.980434915293818, 3.980434915293818, 3.958695784859035, 3.958695784859035, 3.91521752398947, 3.8934783935546875, 3.871739263119905, 3.850000132685122, 3.82826100225034, 3.806521871815557, 3.806521871815557, 3.7630436109459917, 3.6326088283372964, 3.5673914370329483, 3.5456523065981655, 3.5456523065981655, 3.5021740457286006, 3.480434915293818, 3.436956654424253, 3.41521752398947, 3.41521752398947, 3.3934783935546875, 3.350000132685122, 3.350000132685122, 3.306521871815557, 3.2847827413807744, 3.2847827413807744, 3.2630436109459917, 3.2413044805112095, 3.2195653500764267, 3.2195653500764267, 3.197826219641644, 3.1543479587720786, 3.1326088283372964, 3.089130567467731, 3.0673914370329483, 3.0456523065981655, 3.0239131761633833, 2.980434915293818, 2.91521752398947, 2.8934783935546875, 2.850000132685122, 2.806521871815557, 2.7847827413807744, 2.7630436109459917, 2.697826219641644, 2.6108696979025137, 2.5239131761633833, 2.436956654424253, 2.3934783935546875, 2.350000132685122, 2.32826100225034, 2.2847827413807744, 2.2630436109459917, 2.2195653500764267, 2.1760870892068613, 2.1108696979025137, 2.0456523065981655, 1.9804349152938179, 1.9586957848590354, 1.9152175239894702, 1.8934783935546875, 1.8500001326851223, 1.8065218718155571, 1.7413044805112092, 1.6760870892068613, 1.6543479587720789, 1.6326088283372961, 1.6108696979025137, 1.589130567467731, 1.5456523065981658, 1.5021740457286006, 1.4586957848590354, 1.4369566544242527, 1.3934783935546875, 1.3717392631199048, 1.3500001326851223, 1.3065218718155571, 1.2847827413807744, 1.2413044805112092, 1.197826219641644, 1.1760870892068613, 1.1326088283372961, 1.1108696979025137, 1.089130567467731, 1.0456523065981658, 1.023913176163383, 1.0021740457286006, 0.980434915293818, 0.9586957848590353, 0.9369566544242527, 0.8717392631199049, 0.806521871815557, 0.7847827413807744, 0.7413044805112092, 0.6543479587720789, 0.6326088283372961, 0.589130567467731, 0.5673914370329484, 0.5673914370329484, 0.5456523065981658, 0.5021740457286006, 0.43695665442425274, 0.3934783935546875, 0.30652187181555707, 0.24130448051120923, 0.21956535007642664];

ansx4: [-0.9456521739130435, -0.9456521739130435, -0.9021739130434783, -0.9021739130434783, -0.9021739130434783, -0.8152173913043478, -0.7282608695652174, -0.7065217391304348, -0.6847826086956522, -0.6413043478260869, -0.6195652173913043, -0.5978260869565217, -0.5978260869565217, -0.5760869565217391, -0.5760869565217391, -0.532608695652174, -0.44565217391304346, -0.40217391304347827, -0.33695652173913043, -0.33695652173913043, -0.33695652173913043, -0.33695652173913043, -0.31521739130434784, -0.31521739130434784, -0.29347826086956524, -0.29347826086956524, -0.29347826086956524, -0.2717391304347826, -0.2717391304347826, -0.25, -0.25, -0.22826086956521738, -0.22826086956521738, -0.20652173913043478, -0.20652173913043478, -0.18478260869565216, -0.16304347826086957, -0.14130434782608695, -0.14130434782608695, -0.11956521739130435, -0.11956521739130435, -0.11956521739130435, -0.11956521739130435, -0.09782608695652174, -0.07608695652173914, -0.05434782608695652, -0.05434782608695652, -0.03260869565217391, -0.03260869565217391, 0.010869565217391304, 0.07608695652173914, 0.07608695652173914, 0.11956521739130435, 0.22826086956521738, 0.2717391304347826, 0.29347826086956524, 0.31521739130434784, 0.358695652173913, 0.42391304347826086, 0.4673913043478261, 0.532608695652174, 0.6847826086956522, 0.7282608695652174, 0.75, 0.8152173913043478, 0.8804347826086957, 0.9021739130434783, 0.9021739130434783, 0.9239130434782609, 0.967391304347826, 1.1195652173913044, 1.141304347826087, 1.184782608695652, 1.25, 1.2717391304347827, 1.358695652173913, 1.423913043478261, 1.4673913043478262, 1.4891304347826086, 1.5108695652173914, 1.5543478260869565, 1.5978260869565217, 1.641304347826087, 1.6630434782608696, 1.7065217391304348, 1.7282608695652173, 1.7717391304347827, 1.7934782608695652, 1.815217391304348, 1.8369565217391304, 1.8369565217391304, 1.858695652173913, 1.8804347826086956, 1.9021739130434783, 1.923913043478261, 1.9456521739130435, 2.032608695652174, 2.0543478260869565, 2.097826086956522, 2.119565217391304, 2.119565217391304, 2.141304347826087, 2.1847826086956523, 2.2065217391304346, 2.2282608695652173, 2.2282608695652173, 2.2282608695652173, 2.25, 2.2717391304347827, 2.2717391304347827, 2.2717391304347827, 2.2934782608695654, 2.3152173913043477, 2.3369565217391304, 2.358695652173913, 2.380434782608696, 2.380434782608696, 2.380434782608696, 2.380434782608696, 2.402173913043478, 2.402173913043478, 2.4456521739130435, 2.4456521739130435, 2.467391304347826, 2.489130434782609, 2.489130434782609, 2.510869565217391, 2.510869565217391, 2.510869565217391, 2.532608695652174, 2.532608695652174, 2.532608695652174, 2.5760869565217392, 2.5760869565217392, 2.5760869565217392, 2.597826086956522, 2.597826086956522, 2.619565217391304, 2.619565217391304, 2.641304347826087, 2.641304347826087, 2.641304347826087, 2.6630434782608696, 2.6847826086956523, 2.6847826086956523, 2.6847826086956523, 2.6847826086956523, 2.7065217391304346, 2.7065217391304346, 2.7065217391304346, 2.7065217391304346, 2.7065217391304346, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.75, 2.7934782608695654, 2.8152173913043477, 2.8369565217391304, 2.8369565217391304, 2.8369565217391304, 2.8369565217391304, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.858695652173913, 2.8369565217391304, 2.8369565217391304, 2.7934782608695654, 2.7934782608695654, 2.7934782608695654, 2.7934782608695654, 2.7717391304347827, 2.7717391304347827, 2.75, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7282608695652173, 2.7065217391304346, 2.7065217391304346, 2.7065217391304346, 2.7065217391304346, 2.6847826086956523, 2.6630434782608696, 2.619565217391304, 2.597826086956522, 2.5543478260869565, 2.5543478260869565, 2.532608695652174, 2.532608695652174, 2.510869565217391, 2.489130434782609, 2.467391304347826, 2.467391304347826, 2.4456521739130435, 2.4456521739130435, 2.4456521739130435, 2.4239130434782608, 2.402173913043478, 2.402173913043478, 2.402173913043478, 2.402173913043478, 2.402173913043478, 2.380434782608696, 2.358695652173913, 2.358695652173913, 2.358695652173913, 2.3369565217391304, 2.3152173913043477, 2.3152173913043477, 2.2934782608695654, 2.2934782608695654, 2.2934782608695654, 2.2717391304347827, 2.2717391304347827, 2.2717391304347827, 2.2717391304347827, 2.2282608695652173, 2.1847826086956523, 2.1847826086956523, 2.1847826086956523, 2.1847826086956523, 2.0760869565217392, 2.010869565217391, 1.9673913043478262, 1.9456521739130435, 1.9021739130434783, 1.8804347826086956, 1.8804347826086956, 1.8804347826086956, 1.858695652173913, 1.858695652173913, 1.8369565217391304, 1.815217391304348, 1.815217391304348, 1.7934782608695652, 1.7934782608695652, 1.7717391304347827, 1.75, 1.7282608695652173, 1.7282608695652173, 1.7065217391304348, 1.6630434782608696, 1.6195652173913044, 1.5978260869565217, 1.576086956521739, 1.5543478260869565, 1.5326086956521738, 1.5108695652173914, 1.4891304347826086, 1.4456521739130435, 1.423913043478261, 1.4021739130434783, 1.3804347826086956, 1.358695652173913, 1.3369565217391304, 1.315217391304348, 1.2934782608695652, 1.2717391304347827, 1.25, 1.2282608695652173, 1.184782608695652, 1.1630434782608696, 1.141304347826087, 1.1195652173913044, 1.0978260869565217, 1.076086956521739, 1.0543478260869565, 1.0326086956521738, 0.9456521739130435, 0.9021739130434783, 0.8804347826086957, 0.8586956521739131, 0.8369565217391305, 0.8152173913043478, 0.6847826086956522, 0.5108695652173914, 0.3804347826086957, 0.358695652173913, 0.2717391304347826, 0.25, 0.25, 0.20652173913043478, 0.16304347826086957, 0.14130434782608695, 0.09782608695652174, 0.05434782608695652, 0.05434782608695652, -0.010869565217391304, -0.07608695652173914, -0.11956521739130435, -0.16304347826086957, -0.18478260869565216, -0.20652173913043478, -0.20652173913043478, -0.22826086956521738, -0.25, -0.2717391304347826, -0.29347826086956524, -0.29347826086956524, -0.31521739130434784, -0.358695652173913, -0.3804347826086957, -0.40217391304347827, -0.42391304347826086, -0.4673913043478261, -0.4673913043478261, -0.4891304347826087, -0.4891304347826087, -0.4891304347826087, -0.5108695652173914, -0.5108695652173914, -0.5108695652173914, -0.5108695652173914, -0.5108695652173914, -0.5108695652173914, -0.5108695652173914, -0.532608695652174, -0.5543478260869565, -0.5760869565217391, -0.5760869565217391, -0.5978260869565217, -0.6195652173913043, -0.6630434782608695, -0.7282608695652174, -0.7717391304347826, -0.7934782608695652, -0.8152173913043478, -0.8369565217391305, -0.8369565217391305, -0.8369565217391305, -0.8369565217391305, -0.8369565217391305, -0.8586956521739131, -0.9021739130434783, -0.9021739130434783, -0.9021739130434783, -0.9021739130434783, -0.9021739130434783, -0.9021739130434783, -0.9021739130434783, -0.9021739130434783, -0.8804347826086957, -0.8804347826086957, -0.8804347826086957, -0.8804347826086957, -0.8804347826086957, -0.8586956521739131, -0.8586956521739131, -0.8152173913043478, -0.7717391304347826, -0.75, -0.75, -0.75, -0.75, -0.75, -0.7282608695652174, -0.7282608695652174, -0.7065217391304348, -0.7065217391304348, -0.7065217391304348, -0.7065217391304348, -0.7065217391304348, -0.6847826086956522, -0.6413043478260869, -0.6413043478260869, -0.6195652173913043, -0.6195652173913043, -0.5760869565217391, -0.5760869565217391, -0.5543478260869565, -0.5543478260869565, -0.532608695652174, -0.532608695652174, -0.5108695652173914, -0.4891304347826087, -0.4673913043478261, -0.4673913043478261, -0.44565217391304346, -0.42391304347826086, -0.358695652173913, -0.33695652173913043, -0.33695652173913043, -0.33695652173913043, -0.31521739130434784, -0.29347826086956524, -0.29347826086956524, -0.2717391304347826, -0.22826086956521738, -0.20652173913043478, -0.18478260869565216, -0.16304347826086957, -0.16304347826086957, -0.16304347826086957, -0.16304347826086957, -0.16304347826086957, -0.16304347826086957, -0.16304347826086957, -0.16304347826086957, -0.16304347826086957, -0.16304347826086957, -0.16304347826086957, -0.14130434782608695, -0.11956521739130435, -0.09782608695652174, -0.07608695652173914, -0.05434782608695652, -0.010869565217391304, 0.010869565217391304, 0.07608695652173914, 0.11956521739130435, 0.14130434782608695, 0.16304347826086957, 0.18478260869565216, 0.20652173913043478, 0.31521739130434784, 0.31521739130434784, -1.2934782608695652, -1.315217391304348, -1.3369565217391304, -1.358695652173913, -1.3804347826086956, -1.184782608695652, -1.1195652173913044, -1.2065217391304348, -1.358695652173913, 3.1847826086956523, 3.1847826086956523, 3.510869565217391, 3.2934782608695654, 3.380434782608696, -1.358695652173913, -1.1195652173913044, 3.119565217391304, 3.119565217391304, 3.119565217391304, 3.0760869565217392];
ansy4: [0.35000013268512226, 0.3934783935546875, 0.589130567467731, 0.6326088283372961, 0.6543479587720789, 0.7630436109459918, 0.8934783935546875, 0.9586957848590353, 1.0673914370329485, 1.2195653500764265, 1.2847827413807744, 1.3282610022503396, 1.4586957848590354, 1.5021740457286006, 1.523913176163383, 1.589130567467731, 1.697826219641644, 1.8282610022503396, 1.9586957848590354, 1.9804349152938179, 2.0021740457286006, 2.0239131761633833, 2.0673914370329483, 2.1760870892068613, 2.2847827413807744, 2.32826100225034, 2.371739263119905, 2.3934783935546875, 2.436956654424253, 2.458695784859035, 2.5021740457286006, 2.5456523065981655, 2.589130567467731, 2.6108696979025137, 2.6543479587720786, 2.6760870892068613, 2.697826219641644, 2.7413044805112095, 2.7630436109459917, 2.7847827413807744, 2.806521871815557, 2.82826100225034, 2.850000132685122, 2.850000132685122, 2.871739263119905, 2.91521752398947, 2.936956654424253, 2.958695784859035, 2.980434915293818, 3.0021740457286006, 3.089130567467731, 3.1543479587720786, 3.197826219641644, 3.306521871815557, 3.32826100225034, 3.350000132685122, 3.371739263119905, 3.3934783935546875, 3.458695784859035, 3.5021740457286006, 3.5239131761633833, 3.589130567467731, 3.589130567467731, 3.589130567467731, 3.6326088283372964, 3.6543479587720786, 3.6543479587720786, 3.6760870892068613, 3.6760870892068613, 3.697826219641644, 3.7413044805112095, 3.7413044805112095, 3.7413044805112095, 3.7413044805112095, 3.7413044805112095, 3.7195653500764267, 3.7195653500764267, 3.7195653500764267, 3.7195653500764267, 3.7195653500764267, 3.6760870892068613, 3.6326088283372964, 3.589130567467731, 3.5456523065981655, 3.5021740457286006, 3.458695784859035, 3.3934783935546875, 3.350000132685122, 3.32826100225034, 3.32826100225034, 3.306521871815557, 3.2847827413807744, 3.2630436109459917, 3.2195653500764267, 3.197826219641644, 3.1760870892068613, 3.0456523065981655, 3.0021740457286006, 2.958695784859035, 2.91521752398947, 2.8934783935546875, 2.850000132685122, 2.806521871815557, 2.7195653500764267, 2.6760870892068613, 2.6543479587720786, 2.6108696979025137, 2.5673914370329483, 2.5456523065981655, 2.5239131761633833, 2.480434915293818, 2.436956654424253, 2.350000132685122, 2.2847827413807744, 2.2630436109459917, 2.2630436109459917, 2.2413044805112095, 2.2195653500764267, 2.1760870892068613, 2.1543479587720786, 2.1108696979025137, 2.0456523065981655, 2.0239131761633833, 1.9804349152938179, 1.9369566544242527, 1.9152175239894702, 1.8934783935546875, 1.8717392631199048, 1.8500001326851223, 1.8500001326851223, 1.8282610022503396, 1.8065218718155571, 1.763043610945992, 1.7195653500764265, 1.697826219641644, 1.6326088283372961, 1.589130567467731, 1.5456523065981658, 1.523913176163383, 1.4804349152938179, 1.4586957848590354, 1.4369566544242527, 1.3934783935546875, 1.3717392631199048, 1.3282610022503396, 1.3065218718155571, 1.2847827413807744, 1.2413044805112092, 1.2195653500764265, 1.197826219641644, 1.1543479587720789, 1.1326088283372961, 1.1108696979025137, 1.089130567467731, 1.0673914370329485, 1.0456523065981658, 1.023913176163383, 0.9152175239894701, 0.8934783935546875, 0.806521871815557, 0.7847827413807744, 0.7630436109459918, 0.7413044805112092, 0.7195653500764266, 0.6760870892068614, 0.6108696979025136, 0.589130567467731, 0.5673914370329484, 0.5456523065981658, 0.5021740457286006, 0.45869578485903534, 0.3717392631199049, 0.30652187181555707, 0.32826100225033966, 0.3934783935546875, 0.43695665442425274, 0.5239131761633832, 0.589130567467731, 0.6108696979025136, 0.6543479587720789, 0.7630436109459918, 0.7847827413807744, 0.806521871815557, 0.8934783935546875, 0.9586957848590353, 0.980434915293818, 1.0673914370329485, 1.2195653500764265, 1.2847827413807744, 1.3282610022503396, 1.3500001326851223, 1.3717392631199048, 1.3934783935546875, 1.4152175239894702, 1.4369566544242527, 1.4586957848590354, 1.4804349152938179, 1.5021740457286006, 1.5456523065981658, 1.5673914370329485, 1.6326088283372961, 1.697826219641644, 1.7195653500764265, 1.7413044805112092, 1.7847827413807744, 1.8065218718155571, 1.8065218718155571, 1.8500001326851223, 1.8934783935546875, 1.9369566544242527, 1.9586957848590354, 1.9804349152938179, 2.0239131761633833, 2.0239131761633833, 2.0456523065981655, 2.089130567467731, 2.1108696979025137, 2.1326088283372964, 2.1760870892068613, 2.2195653500764267, 2.2630436109459917, 2.2847827413807744, 2.32826100225034, 2.32826100225034, 2.350000132685122, 2.371739263119905, 2.3934783935546875, 2.41521752398947, 2.436956654424253, 2.458695784859035, 2.5021740457286006, 2.5239131761633833, 2.5673914370329483, 2.6108696979025137, 2.7195653500764267, 2.7413044805112095, 2.7630436109459917, 2.806521871815557, 2.91521752398947, 2.980434915293818, 3.0239131761633833, 3.0673914370329483, 3.0673914370329483, 3.089130567467731, 3.1108696979025137, 3.1326088283372964, 3.1326088283372964, 3.1543479587720786, 3.1543479587720786, 3.2195653500764267, 3.2413044805112095, 3.2630436109459917, 3.2847827413807744, 3.306521871815557, 3.371739263119905, 3.3934783935546875, 3.41521752398947, 3.436956654424253, 3.5021740457286006, 3.5456523065981655, 3.5673914370329483, 3.5673914370329483, 3.589130567467731, 3.6108696979025137, 3.6108696979025137, 3.6108696979025137, 3.6326088283372964, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6543479587720786, 3.6326088283372964, 3.589130567467731, 3.5456523065981655, 3.5456523065981655, 3.5021740457286006, 3.458695784859035, 3.41521752398947, 3.3934783935546875, 3.32826100225034, 3.306521871815557, 3.197826219641644, 3.1108696979025137, 3.0673914370329483, 2.980434915293818, 2.871739263119905, 2.850000132685122, 2.806521871815557, 2.7413044805112095, 2.6543479587720786, 2.6108696979025137, 2.5239131761633833, 2.41521752398947, 2.350000132685122, 2.2413044805112095, 2.197826219641644, 2.1108696979025137, 2.0456523065981655, 1.9804349152938179, 1.9586957848590354, 1.8934783935546875, 1.7847827413807744, 1.763043610945992, 1.7413044805112092, 1.697826219641644, 1.6760870892068613, 1.6543479587720789, 1.6326088283372961, 1.6108696979025137, 1.589130567467731, 1.5673914370329485, 1.5021740457286006, 1.4586957848590354, 1.3500001326851223, 1.3282610022503396, 1.263043610945992, 1.2413044805112092, 1.2195653500764265, 1.197826219641644, 1.1543479587720789, 1.1108696979025137, 1.0673914370329485, 1.0456523065981658, 1.0456523065981658, 1.0021740457286006, 0.9369566544242527, 0.8934783935546875, 0.8500001326851223, 0.7847827413807744, 0.7195653500764266, 0.6543479587720789, 0.6326088283372961, 0.6108696979025136, 0.5673914370329484, 0.5456523065981658, 0.48043491529381793, 0.5021740457286006, 0.5673914370329484, 0.6108696979025136, 0.6543479587720789, 0.6760870892068614, 0.697826219641644, 0.7195653500764266, 0.7630436109459918, 0.7847827413807744, 0.8282610022503397, 0.8934783935546875, 0.9586957848590353, 1.023913176163383, 1.0673914370329485, 1.089130567467731, 1.1108696979025137, 1.1760870892068613, 1.197826219641644, 1.2195653500764265, 1.2413044805112092, 1.263043610945992, 1.2847827413807744, 1.3065218718155571, 1.3500001326851223, 1.4152175239894702, 1.4586957848590354, 1.4586957848590354, 1.5021740457286006, 1.5456523065981658, 1.5673914370329485, 1.5673914370329485, 1.589130567467731, 1.6326088283372961, 1.6543479587720789, 1.6543479587720789, 1.7195653500764265, 1.7413044805112092, 1.763043610945992, 1.8065218718155571, 1.8065218718155571, 1.9152175239894702, 1.9369566544242527, 1.9804349152938179, 2.0239131761633833, 2.0456523065981655, 2.089130567467731, 2.1108696979025137, 2.1760870892068613, 2.197826219641644, 2.2630436109459917, 2.2847827413807744, 2.350000132685122, 2.371739263119905, 2.41521752398947, 2.436956654424253, 2.480434915293818, 2.5021740457286006, 2.5456523065981655, 2.6326088283372964, 2.6543479587720786, 2.6760870892068613, 2.7413044805112095, 2.7847827413807744, 2.82826100225034, 2.850000132685122, 2.8934783935546875, 2.936956654424253, 2.980434915293818, 3.0239131761633833, 3.089130567467731, 3.1543479587720786, 3.1760870892068613, 3.2195653500764267, 3.2630436109459917, 3.2847827413807744, 3.3934783935546875, 3.436956654424253, -0.019565084706182064, -0.019565084706182064, -0.019565084706182064, -0.019565084706182064, -0.019565084706182064, 0.43695665442425274, 0.2847827413807745, 0.6760870892068614, 0.4152175239894701, 0.17608708920686142, 0.2630436109459918, 0.2847827413807745, 0.45869578485903534, 0.21956535007642664, 0.6543479587720789, 0.8500001326851223, 0.6108696979025136, 0.5021740457286006, 0.7630436109459918, 0.8934783935546875];


/* Node 1 - Feedback Applet*/



/* Node 2 - Are there enough points for an assessment?*/
adequate_number_of_points_p(ans, num):= is(length(ans)>=num)$

/*Node 3 - Does the sketch cover the whole interval -1<=x<=3?*/

/* 

Make sure the list ans1, has an adequate number of points in the interval ia <= x <= ib, by dividing this into ni regions.
That is, each interval should contain mpt points at least.

*/
adequate_distribution_of_points_p(ans, ia, ib, ni, mpt) := block([si, k, retall],
  /* Create ni evenly spaced points between ia and ib. */
  si:ev(makelist(ia+k*(ib-ia)/ni,k,0,ni), simp),
  if debug then print(si),
  /* retall is a variable to hold the answer. */
  retall:true,
  for k: 1 thru ni do 
   retall: (retall and is(length(sublist_indices(ans, lambda([ex], ev(is(si[k]<= ex and ex<si[k+1]), simp))))>= mpt)),
  return(retall)
)$




/*Node 4+5 - Assessment of the sketch's accuracy*/ 
/*Determining (approximately) the lowest distance of each sketched Point to the function's (variable fofx) graph in the intervall ia <= x <= ib in steps of ri.*/
/*IDEA OF VERSION FOR TWO INPUTS:*/
accurate_sketch_p(ansx, ansy, fofx, ia, ib, ri, tacc) := block([md, k, x, i, sacc, compare_tacc_sacc],
    
    /*create list (md) of every point's shortest distence to the function's graph*/
    md:[],
    for k:1 thru length(ansx) do 
    md: endcons(lmin(makelist(sqrt((ansx[k]-i)^2+(ansy[k]-(ev(fofx,x=i)))^2), i, ia, ib, ri)), md),
    /*if debug then print(md),*/
    
    /*Calculating the sektch's average of the shortest distances (sacc)*/
    sacc: (lsum(k , k, md))/(length(ansx)),
    if debug then print(sacc),
    
    /*Compare sacc to the teacher's demanded accuracy (tacc)*/
    compare_tacc_sacc: is(sacc <= tacc),
    return(compare_tacc_sacc)
)$




/* Node 6 - Does the sketch contain the function's x-intercepts and/or extrema? */

/* Extrema: Are all extrema of the function fofx (f of x) within the sketch. */
/* Considering possible inaccuracies, the following block looks for points within a <dr radius around the extrema. */



/*Extrema part 1: The following part returns "true" if all of the extrema were sketched and "false" if there is at least on unsketched extrema. (If the function has no extrema it also returns "true")*/

extrema_sketched_p(ansx, ansy, fofx, dr):= block([i, j, k, extr, second_derivative, without_saddle_points, unsketched_extrema, retall],
    
	/* extr is a variable to identify the x-values of extrema (and saddle points). */
    extr: solve(diff(fofx,x)=0,x),
    
    second_derivative: diff(fofx, x, 2),
    
    /* empty list that is going to be filled with the entries from extr but without the saddle points */
    without_saddle_points:[],
    
    /*Loop for sorting out the saddle points*/
    for j:1 thru length(extr) do
    if
    ev(second_derivative, extr[j])#0
    then
    without_saddle_points: endcons(extr[j], without_saddle_points)
    else
    without_saddle_points: without_saddle_points,
    
    /* empty list that is going to be filled with entries of extrema that are not sketched */
    unsketched_extrema: [],
        
    /*Loop for detecting extrema unsketched */
    for i:1 thru length(without_saddle_points) do
    if
    length(sublist_indices(makelist((sqrt((ansx[k]-ev(x,  without_saddle_points[i]))^2+(ansy[k]-ev(fofx,  without_saddle_points[i]))^2)),k,1,length(ansx)), lambda([ex], ex<=dr)))=0
    then
    unsketched_extrema: endcons(without_saddle_points[i], unsketched_extrema)
    else
    unsketched_extrema: unsketched_extrema,
        
    /* retall is a variable to hold the answer. */
    if
    unsketched_extrema=[] 
    then 
    retall:true
    else
    retall:false,
    
    return(retall)
)$


/*Extrema part 2: The following part gives a list of the extrema unsketched. (If all extrema were sketched this will return an empty list)*/

list_unsketched_extrema(ansx, ansy, fofx, dr):= block([a, i, j, k, extr, second_derivative, without_saddle_points, unsketched_extrema, retall],
    
    /*extr is a variable to identify the x-values of extrema (and saddle points).*/
    extr: solve(diff(fofx,x)=0,x),
    
    second_derivative: diff(fofx, x, 2),
    
    /*empty list that is going to be filled with the entries from extr but without the saddle points*/
    without_saddle_points:[],
    
    /*Loop for sorting out the saddle points*/
    for j:1 thru length(extr) do
    if
    ev(second_derivative, extr[j])#0
    then
    without_saddle_points: endcons(extr[j], without_saddle_points)
    else
    without_saddle_points: without_saddle_points,
    
    /*empty list that is going to be filled with entries of extrema that are not sketched*/
    unsketched_extrema: [],
    
    /*Loop for detecting extrema unsketched*/
    for i:1 thru length(without_saddle_points) do
    if
    length(sublist_indices(makelist((sqrt((ansx[k]-ev(x,  without_saddle_points[i]))^2+(ansy[k]-ev(fofx,  without_saddle_points[i]))^2)),k,1,length(ansx)), lambda([ex], ex<=dr)))=0
    then
    unsketched_extrema: endcons(without_saddle_points[i], unsketched_extrema)
    else
    unsketched_extrema: unsketched_extrema,
    
    /*This returns a list of the unsketched extrema in the following form: [pt(x_1, f(x_1)), pt(x_2, f(x_2)), ...] (Default)*/
    return(makelist(pt(ev(x, unsketched_extrema[a]), ev(f, unsketched_extrema[a])), a, 1, length(unsketched_extrema)))
    
    /*For a list of the unsketched extrema in the form [[x_1, f(x_1)], [x_2, f(x_2)], ...] use the following line as return instead.*/
    /*return(makelist([ev(x, unsketched_extrema[a]), ev(f, unsketched_extrema[a])], a, 1, length(unsketched_extrema)))*/
    
    /*For a list of the unsketched extrema in the form [x=ex_1, x=ex_2, ...] (contains only x-values) use the following line as return instead.*/
    /*return(unsketched_extrema)*/
)$




/* x-intercepts: Are all x-intercepts of the function fofx (f of x) within the sketch. */
/* Considering possible inaccuracies, the following block looks for points within a <dr radius around the x-intercepts. */

x_intercepts_sketched_p(ansx, ansy, fofx, dr):= block([i, k, xint, unsketched_intercepts,retall],
    
    /* xint is a variable to identify the x-values of x-intercepts. */
    xint: solve(fofx=0,x),
    unsketched_intercepts: [],
    /* retall is a variable to hold the answer. */
    retall:true,
    
    for i:1 thru length(xint) do
    if
    length(sublist_indices(makelist((sqrt((ansx[k]-ev(x,  xint[i]))^2+(ansy[k]-ev(fofx,  xint[i]))^2)),k,1,length(ansx)), lambda([ex], ex<=dr)))=0
    then
    unsketched_intercepts: endcons( xint[i], unsketched_intercepts)
    else
    unsketched_intercepts: unsketched_intercepts,
    
    if unsketched_intercepts=[] then return(retall) else return(unsketched_intercepts)
)$




/*Node 7 - Is there a (too) high amount of points that are not in the interval ia<=x<=ib?*/
/* nipts is the variable for the teacher's highest accepted number of points that are outside the interval. */

disregard_for_interval_p(ans, ia, ib, nipts) := is((length(sublist_indices(ans, lambda ([ex], ex<ia)))+length(sublist_indices(ans, lambda ([ex], ex>ib))))<=nipts);




/*Node 8+9 - Does the sketch contain (too) many runaway-points with (too) high distances to the function's graph?*/

/*Node 8*/
/*td is the variable for the teacher's demanded maximal distance to define runaway-points. dpt is the variable for maximal number of runaway-points accepted by the teacher. */
/*IDEA OF VERSION FOR TWO INPUTS:*/
searching_for_runaways_p(ansx, ansy, fofx, ia, ib, ri, td, dpt) := block([md, k, i, retall],
    
    /*create list (md) of every point's shortest distence to the function's graph*/
    md:[],
    for k:1 thru length(ansx) do 
    md: endcons(lmin(makelist(sqrt((ansx[k]-i)^2+(ansy[k]-(ev(fofx,x=i)))^2), i, ia, ib, ri)), md),
    /*if debug then print(md),*/
    
    /* retall is a variable to hold the answer. */
    retall:true,
    for k: 1 thru length(ansx) do 
    retall: (retall and is(length(sublist_indices(md, lambda([ex], ex>=td)))<=dpt)),
    if debug then print(length(sublist_indices(md, lambda([ex], ex>=td)))),
    return(retall)
)$


/*
/*IDEA OF VERSION FOR ONLY ONE INPUT:*/
searching_for_runaways_p(ans, ia, ib, ri, td, dpt) := block([md, k, retall],
    
    /*create list (md) of every point's shortest distence to the function's graph*/
    md:[],
    for k:1 thru length(ans) do 
    md: endcons(lmin(makelist(sqrt((ans[k][1]-x)^2+(ans[k][2]-(-x^2+2*x+3))^2), x, ia, ib, ri)), md),
    /*if debug then print(length(md)),*/
    
    /* retall is a variable to hold the answer. */
    retall:true,
    for k: 1 thru length(ans) do 
    retall: (retall and is(length(sublist_indices(md, lambda([ex], ex>=td)))<=dpt)),
    /*if debug then print(sublist_indices(md, lambda([ex], ex>=td))),*/
    if debug then print(length(sublist_indices(md, lambda([ex], ex>=td)))),
    return(retall)
)$
*/




/*Node 9*/
/* tdn is the variable for the distance of points that are tolerable but noteworthy/mentionable for more accuracy at the next time. */
/* tdr is the variable for the teacher's demanded maximal distance to define runaway-points. */ 
/* dpt is the variable for maximal number of tolerable but noteworthy/mentionable accepted by the teacher. */
/*IDEA OF VERSION FOR TWO INPUTS:*/

searching_for_points_with_noteworthy_distances_p(ansx, ansy, fofx, ia, ib, ri, tdn, tdr, dpt) := block([md, k, i, retall],
    
    /*create list (md) of every point's shortest distence to the function's graph*/
    md:[],
    for k:1 thru length(ansx) do 
    md: endcons(lmin(makelist(sqrt((ansx[k]-i)^2+(ansy[k]-(ev(fofx,x=i)))^2), i, ia, ib, ri)), md),
    /*if debug then print(md),*/
    
    /* retall is a variable to hold the answer. */
    retall:true,
    for k: 1 thru length(ansx) do 
    retall: (retall and is(length(sublist_indices(md, lambda([ex], ex>=tdn and ex<tdr)))<=dpt)),
    /*if debug then print(sublist_indices(md, lambda([ex], ex>=tdn and ex<tdr))),*/
    if debug then print(length(sublist_indices(md, lambda([ex], ex>=tdn and ex<tdr)))),
    return(retall)
)$

/*IDEA OF VERSION FOR ONLY ONE INPUT: see approach in node 8*/




/*____________________________________________________________________________________*/

/*Additional assessments/idea that are not part of the prototype yet.*/




/*Here, it is checked if the function's y-intercept lies within the demanded Intervall and if that is the case, it is checked if the y-intercept is (accurately enough) sketched within the sketch.
(Same approach like for x-intercepts and extrema)*/

y_intercept_sketched_p(ansx, ansy, fofx, ia, ib, dr):= block([i, retall],
if is(ia<=0) and is(0<=ib)
then
retall: is(length(sublist_indices(makelist(sqrt((ansx[i])^2+(ansy[i]-(ev(fofx, x=0)))^2), i, 1, length(ansx)), lambda([ex], ex<=dr)))>0)
else
retall:true,
return(retall)
)$




/*Joining x- and y-values into one list of points with the pattern [ [ansx[1], ansy[1]] , [ansx[2], ansy[2]] , ... , [ansx[i],ansy[i]]], and sorting that entries according to the x-values from low to high.*/
list_of_points_sorted(ansx, ansy):= sort(create_list([ansx[i], ansy[i]], i, 1, length(ansx)))$

/*Unsorted:*/
list_of_points(ansx, ansy):= create_list([ansx[i], ansy[i]], i, 1, length(ansx))$

/*Seperation of the x- y-values back into two lists but now sorted according to the x-values from low to high.*/
ansx_sorted(ansx, ansy):= create_list(sort(create_list([ansx[i], ansy[i]], i, 1, length(ansx)))[i][1], i, 1, length(ansx))$
ansy_according_to_ansx_sorted(ansx, ansy):= create_list(sort(create_list([ansx[i], ansy[i]], i, 1, length(ansx)))[i][2], i, 1, length(ansx))$